# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

# build package
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'
- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

- task: CopyFiles@2
  inputs:
    # Contents: 'build/**' # Pull the build directory (React)
    contents: '**/'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

# publish build
- task: PublishBuildArtifacts@1
  inputs: 
    # PathtoPublish: '$(System.DefaultWorkingDirectory)' # upload the entire dir
    PathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
    publishLocation: 'Container' # Options: container, filePath
    #targetPath: # Required when publishLocation == FilePath
    ArtifactName: 'beckiePipeline' # output artifact named www

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TEST-RESULTS.xml'
    testRunTitle: 'Test results for JavaScript using gulp'

- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'beckiePipeline'
    # downloadPath: '$(System.ArtifactsDirectory)'
    downloadPath: $(Build.ArtifactStagingDirectory)

# deploy
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false

# variables:
#   azureSubscription: WVT-alpha 
#   # To ignore SSL error uncomment the below variable
#   VSTS_ARM_REST_IGNORE_SSL_ERRORS: true

# steps:

# - task: AzureWebApp@1
#   displayName: Azure Web App Deploy
#   inputs:
#     azureSubscription: $(azureSubscription)
#     appName: 
#     appType: webAppLinux
#     package: $(System.DefaultWorkingDirectory)
#     deploymentMethod: auto
#     startUpCommand: 'npm run start'